/*
* Copyright (c) 2000 - 2005 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  
 *
*/


// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.nokia.wtk.app;

public final class RemoteSingleton_Stub
    extends java.rmi.server.RemoteStub
    implements com.nokia.wtk.app.RemoteApp, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_performCommand_0;
    
    static {
	try {
	    $method_performCommand_0 = com.nokia.wtk.app.RemoteApp.class.getMethod("performCommand", new java.lang.Class[] {java.lang.String[].class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RemoteSingleton_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of performCommand(String[])
    public void performCommand(java.lang.String[] $param_arrayOf_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_performCommand_0, new java.lang.Object[] {$param_arrayOf_String_1}, 1092756277313885395L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
