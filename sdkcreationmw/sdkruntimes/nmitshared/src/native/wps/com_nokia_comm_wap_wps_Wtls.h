/*
* Copyright (c) 2000 - 2005 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  
 *
*/


/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_nokia_comm_wap_wps_Wtls */

#ifndef _Included_com_nokia_comm_wap_wps_Wtls
#define _Included_com_nokia_comm_wap_wps_Wtls
#ifdef __cplusplus
extern "C" {
#endif
#undef com_nokia_comm_wap_wps_Wtls_PKA_Rsa
#define com_nokia_comm_wap_wps_Wtls_PKA_Rsa 0L
#undef com_nokia_comm_wap_wps_Wtls_PKA_DiffieHellman
#define com_nokia_comm_wap_wps_Wtls_PKA_DiffieHellman 1L
#undef com_nokia_comm_wap_wps_Wtls_PKA_EllipticCurve
#define com_nokia_comm_wap_wps_Wtls_PKA_EllipticCurve 2L
#undef com_nokia_comm_wap_wps_Wtls_KEA_Rsa
#define com_nokia_comm_wap_wps_Wtls_KEA_Rsa 0L
#undef com_nokia_comm_wap_wps_Wtls_KEA_RsaAnon
#define com_nokia_comm_wap_wps_Wtls_KEA_RsaAnon 1L
#undef com_nokia_comm_wap_wps_Wtls_KEA_DhAnon
#define com_nokia_comm_wap_wps_Wtls_KEA_DhAnon 2L
#undef com_nokia_comm_wap_wps_Wtls_KEA_EcdhAnon
#define com_nokia_comm_wap_wps_Wtls_KEA_EcdhAnon 3L
#undef com_nokia_comm_wap_wps_Wtls_KES_Null
#define com_nokia_comm_wap_wps_Wtls_KES_Null 0L
#undef com_nokia_comm_wap_wps_Wtls_KES_SharedSecret
#define com_nokia_comm_wap_wps_Wtls_KES_SharedSecret 1L
#undef com_nokia_comm_wap_wps_Wtls_KES_DHAnon
#define com_nokia_comm_wap_wps_Wtls_KES_DHAnon 2L
#undef com_nokia_comm_wap_wps_Wtls_KES_DHAnon512
#define com_nokia_comm_wap_wps_Wtls_KES_DHAnon512 3L
#undef com_nokia_comm_wap_wps_Wtls_KES_DHAnon768
#define com_nokia_comm_wap_wps_Wtls_KES_DHAnon768 4L
#undef com_nokia_comm_wap_wps_Wtls_KES_RsaAnon
#define com_nokia_comm_wap_wps_Wtls_KES_RsaAnon 5L
#undef com_nokia_comm_wap_wps_Wtls_KES_RsaAnon512
#define com_nokia_comm_wap_wps_Wtls_KES_RsaAnon512 6L
#undef com_nokia_comm_wap_wps_Wtls_KES_RsaAnon768
#define com_nokia_comm_wap_wps_Wtls_KES_RsaAnon768 7L
#undef com_nokia_comm_wap_wps_Wtls_KES_Rsa
#define com_nokia_comm_wap_wps_Wtls_KES_Rsa 8L
#undef com_nokia_comm_wap_wps_Wtls_KES_Rsa512
#define com_nokia_comm_wap_wps_Wtls_KES_Rsa512 9L
#undef com_nokia_comm_wap_wps_Wtls_KES_Rsa768
#define com_nokia_comm_wap_wps_Wtls_KES_Rsa768 10L
#undef com_nokia_comm_wap_wps_Wtls_KES_EcdhAnon
#define com_nokia_comm_wap_wps_Wtls_KES_EcdhAnon 11L
#undef com_nokia_comm_wap_wps_Wtls_KES_EcdhAnon113
#define com_nokia_comm_wap_wps_Wtls_KES_EcdhAnon113 12L
#undef com_nokia_comm_wap_wps_Wtls_KES_EcdhAnon131
#define com_nokia_comm_wap_wps_Wtls_KES_EcdhAnon131 13L
#undef com_nokia_comm_wap_wps_Wtls_KES_EcdhEcdsa
#define com_nokia_comm_wap_wps_Wtls_KES_EcdhEcdsa 14L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Null
#define com_nokia_comm_wap_wps_Wtls_BULK_Null 0L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Rc5_cbc_40
#define com_nokia_comm_wap_wps_Wtls_BULK_Rc5_cbc_40 1L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Rc5_cbc_56
#define com_nokia_comm_wap_wps_Wtls_BULK_Rc5_cbc_56 2L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Rc5_cbc
#define com_nokia_comm_wap_wps_Wtls_BULK_Rc5_cbc 3L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Des_cbc_40
#define com_nokia_comm_wap_wps_Wtls_BULK_Des_cbc_40 4L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Des_cbc
#define com_nokia_comm_wap_wps_Wtls_BULK_Des_cbc 5L
#undef com_nokia_comm_wap_wps_Wtls_BULK_3Des_cbc_ede
#define com_nokia_comm_wap_wps_Wtls_BULK_3Des_cbc_ede 6L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Idea_cbc_40
#define com_nokia_comm_wap_wps_Wtls_BULK_Idea_cbc_40 7L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Idea_cbc_56
#define com_nokia_comm_wap_wps_Wtls_BULK_Idea_cbc_56 8L
#undef com_nokia_comm_wap_wps_Wtls_BULK_Idea_cbc
#define com_nokia_comm_wap_wps_Wtls_BULK_Idea_cbc 9L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Sha_0
#define com_nokia_comm_wap_wps_Wtls_MAC_Sha_0 10L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Sha_40
#define com_nokia_comm_wap_wps_Wtls_MAC_Sha_40 11L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Sha_80
#define com_nokia_comm_wap_wps_Wtls_MAC_Sha_80 12L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Sha
#define com_nokia_comm_wap_wps_Wtls_MAC_Sha 13L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Sha_xor_40
#define com_nokia_comm_wap_wps_Wtls_MAC_Sha_xor_40 14L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Md5_40
#define com_nokia_comm_wap_wps_Wtls_MAC_Md5_40 15L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Md5_80
#define com_nokia_comm_wap_wps_Wtls_MAC_Md5_80 16L
#undef com_nokia_comm_wap_wps_Wtls_MAC_Md5
#define com_nokia_comm_wap_wps_Wtls_MAC_Md5 17L
#undef com_nokia_comm_wap_wps_Wtls_IDT_Null
#define com_nokia_comm_wap_wps_Wtls_IDT_Null 0L
#undef com_nokia_comm_wap_wps_Wtls_IDT_Text
#define com_nokia_comm_wap_wps_Wtls_IDT_Text 1L
#undef com_nokia_comm_wap_wps_Wtls_IDT_Binary
#define com_nokia_comm_wap_wps_Wtls_IDT_Binary 2L
#undef com_nokia_comm_wap_wps_Wtls_IDT_KeyHashSha
#define com_nokia_comm_wap_wps_Wtls_IDT_KeyHashSha 3L
#undef com_nokia_comm_wap_wps_Wtls_IDT_X509Name
#define com_nokia_comm_wap_wps_Wtls_IDT_X509Name 4L
#undef com_nokia_comm_wap_wps_Wtls_SNM_NotUsed
#define com_nokia_comm_wap_wps_Wtls_SNM_NotUsed 0L
#undef com_nokia_comm_wap_wps_Wtls_SNM_Implicite
#define com_nokia_comm_wap_wps_Wtls_SNM_Implicite 1L
#undef com_nokia_comm_wap_wps_Wtls_SNM_Explicite
#define com_nokia_comm_wap_wps_Wtls_SNM_Explicite 2L
#undef com_nokia_comm_wap_wps_Wtls_SEC_CI_Ok
#define com_nokia_comm_wap_wps_Wtls_SEC_CI_Ok 0L
#undef com_nokia_comm_wap_wps_Wtls_SEC_CI_NotYetValid
#define com_nokia_comm_wap_wps_Wtls_SEC_CI_NotYetValid 1L
#undef com_nokia_comm_wap_wps_Wtls_SEC_CI_Expired
#define com_nokia_comm_wap_wps_Wtls_SEC_CI_Expired 2L
#undef com_nokia_comm_wap_wps_Wtls_SEC_CI_UnknownCA
#define com_nokia_comm_wap_wps_Wtls_SEC_CI_UnknownCA 3L
#undef com_nokia_comm_wap_wps_Wtls_SEC_CI_PermanentStorageReadError
#define com_nokia_comm_wap_wps_Wtls_SEC_CI_PermanentStorageReadError 4L
#undef com_nokia_comm_wap_wps_Wtls_WTLS_MAX_TEXT_NAME_LENGTH
#define com_nokia_comm_wap_wps_Wtls_WTLS_MAX_TEXT_NAME_LENGTH 256L
/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetKeyExchangeSuite
 * Signature: (IIII[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetKeyExchangeSuite
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetCipherSuite
 * Signature: (I[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetCipherSuite
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetSequenceNumberMode
 * Signature: (IB)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetSequenceNumberMode
  (JNIEnv *, jclass, jint, jbyte);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetKeyRefresh
 * Signature: (IB)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetKeyRefresh
  (JNIEnv *, jclass, jint, jbyte);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetSharedSecret
 * Signature: (I[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetSharedSecret
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetRecordLengthUsage
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetRecordLengthUsage
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetKeyExchangeSuite
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetKeyExchangeSuite
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetBulkAlgorithm
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetBulkAlgorithm
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetMacAlgorithm
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetMacAlgorithm
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetSequenceNumberMode
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetSequenceNumberMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetKeyRefresh
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetKeyRefresh
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsInitSecureStructure
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsInitSecureStructure
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsReleaseSecureStructure
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsReleaseSecureStructure
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsConnect
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsConnect
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsConnectStart
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsConnectStart
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsConnectContinue
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsConnectContinue
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsConnectAbort
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsConnectAbort
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsCloseSession
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsCloseSession
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsCloseConnection
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsCloseConnection
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetHandShakeState
 * Signature: (I)B
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetAlert ( 
	JNIEnv *, jclass, jint, jbyteArray );

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetHandShakeState
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetHandShakeState
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetSessionInfo
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetSessionInfo ( 
	JNIEnv *, jclass, jint );

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSetAlertDestination
 * Signature: (B)V
 */
JNIEXPORT void JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSetAlertDestination
  (JNIEnv *, jclass, jbyte);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsLoadSession
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsLoadSession
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSaveSession
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSaveSession
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsRemoveSession
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsRemoveSession
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsLoadConnection
 * Signature: ([II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsLoadConnection
  (JNIEnv *, jclass, jintArray, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsSaveConnection
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsSaveConnection
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsRemoveConnection
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsRemoveConnection
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsGetSessionId
 * Signature: (I[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsGetSessionId
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsRegisterEventCallback
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsRegisterEventCallback
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wimiInitializeReq
 * Signature: ()Z
 */
JNIEXPORT void JNICALL Java_com_nokia_comm_wap_wps_Wtls_wimiInitializeReq (
	JNIEnv *, jclass );

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wimiCloseDownReq
 * Signature: ()Z
 */
JNIEXPORT void JNICALL Java_com_nokia_comm_wap_wps_Wtls_wimiCloseDownReq (
	JNIEnv *, jclass );

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    registerNativeVM
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_nokia_comm_wap_wps_Wtls_registerNativeVM
  (JNIEnv *, jclass);

/*
 * Class:     com_nokia_comm_wap_wps_Wtls
 * Method:    wtlsCGetServerCertificateInfo
 * Signature: (I[I[I[C[C[B[B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nokia_comm_wap_wps_Wtls_wtlsCGetServerCertificateInfo
  (JNIEnv *, jclass, jint, jintArray, jintArray, jcharArray, jcharArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
